@using AGS.Models.ViewModels.Common;
@using AGS.Services.AGS.Localization;
@inject ILocalizationService _localizer
@inject NavigationManager _navigationManager



@if (menuOption.ChildrenMenus != null && menuOption.ChildrenMenus.Count > 0)
{
    <a data-toggle="collapse" @onclick="ToggleNavMenu" href="#">
        <div>
            @_localizer.GetLocalizedString(menuOption.LabelKey, _appStateContainer.Lang)
            <i class="fa @ArrowClass " style="float: right;"></i>
        </div>
    </a>
    <div class="list-group-item flex-column align-items-start collapse @NavMenuCssClass" id="@(menuOption.LabelKey + "_menu_collapse")">
        @foreach (var childMenu in menuOption.ChildrenMenus)
        {
            <NavMenuOption level="@(level + 1)" menuOption=@childMenu />
        }
    </div>
}
else
{
    <NavLink class="nav-link" href=@menuOption.Url Match="NavLinkMatch.Prefix">
        <span>@_localizer.GetLocalizedString(menuOption.LabelKey, _appStateContainer.Lang)</span>
    </NavLink>
}



@code {
    private string ArrowClass => collapseNavMenu ? "fa-chevron-down" : "fa-chevron-up";

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => !collapseNavMenu ? "show" : "";

    [Parameter]
    public MenuOption menuOption { get; set; }

    [CascadingParameter]
    public AppStateContainer _appStateContainer { get; set; }

    [Parameter]
    public int level { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        collapseNavMenu = !_navigationManager.Uri.Contains(menuOption.Url);
        
        base.OnInitialized();
    }
}
